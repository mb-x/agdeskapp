/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agipub;

import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import object.FrenchNumberToWords;

/**
 *
 * @author bmx
 */
public class pan_facture extends javax.swing.JPanel {

    Statement state;
    ResultSet result;
    String titles[] = new String[]{
        "No Facture", "No Commande", "Client", "Date" , "TTC"
    };

    /**
     * Creates new form pan_facture
     */
    public pan_facture() {
        initComponents();
        chargerFactures();
        tab_facture_selectChanged();
    }

    private void chargerFactures() {
        try {
            state = Connexion.getInstance().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String query = "select f.id_facture , f.id_cmd , cl.clt_ste , f.date_facture, c.prix_tt  from facture f inner join commande c on c.id_cmd=f.id_cmd inner join client cl on cl.id_client=c.id_client";
            Object[][] data;
            result = state.executeQuery(query);
            result.last();
            data = new Object[result.getRow()][titles.length];
            int j = 1;
            result.beforeFirst();

            while (result.next()) {
                for (int i = 1; i <= titles.length; i++) {
                    data[j - 1][i - 1] = result.getObject(i);
//                    JOptionPane.showMessageDialog(null, data[j - 1][i - 1] );
                }
                j++;
            }

            tbl_facture.setModel(new DefaultTableModel(data, titles) {

                Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class,java.lang.Double.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false,false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }

            });
            result.close();
            state.close();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            Logger.getLogger(pan_facture.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void tab_facture_selectChanged() {
        tbl_facture.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                try {

                  int  row = tbl_facture.getSelectedRow();
                    if(row != -1){
                        String ref_facture = String.valueOf(tbl_facture.getValueAt(row, 0));
                        txt_code.setText(ref_facture);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Erreur au changment de selection : \n" + ex.getMessage());
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar_clients = new javax.swing.JToolBar();
        btn_atteindre = new javax.swing.JButton();
        btn_refrech = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        txt_code = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btn_delete = new javax.swing.JButton();
        btn_facturer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_facture = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        toolBar_clients.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_atteindre.setText("Atteindre");
        btn_atteindre.setFocusable(false);
        btn_atteindre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_atteindre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_atteindre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atteindreActionPerformed(evt);
            }
        });
        toolBar_clients.add(btn_atteindre);

        btn_refrech.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/img_app_agipub/interact01.png"))); // NOI18N
        btn_refrech.setToolTipText("Actualiser");
        btn_refrech.setFocusable(false);
        btn_refrech.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_refrech.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_refrech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refrechActionPerformed(evt);
            }
        });
        toolBar_clients.add(btn_refrech);
        toolBar_clients.add(jSeparator2);

        txt_code.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_code.setFocusable(false);
        txt_code.setMaximumSize(new java.awt.Dimension(800, 25));
        txt_code.setMinimumSize(new java.awt.Dimension(50, 20));
        txt_code.setPreferredSize(new java.awt.Dimension(60, 25));
        toolBar_clients.add(txt_code);
        toolBar_clients.add(jSeparator1);

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/img_app_agipub/sub_blue_delete.png"))); // NOI18N
        btn_delete.setToolTipText("Supprimer");
        btn_delete.setFocusable(false);
        btn_delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_delete.setMargin(new java.awt.Insets(2, 7, 2, 7));
        btn_delete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        toolBar_clients.add(btn_delete);

        btn_facturer.setText("Voir la facture");
        btn_facturer.setFocusable(false);
        btn_facturer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_facturer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_facturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_facturerActionPerformed(evt);
            }
        });
        toolBar_clients.add(btn_facturer);

        add(toolBar_clients, java.awt.BorderLayout.PAGE_START);

        tbl_facture.setRowHeight(30);
        tbl_facture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No Facture", "No Commande", "Client", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_facture);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_facturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_facturerActionPerformed
        // TODO add your handling code here:
        try {

            int row = tbl_facture.getSelectedRow();
            if(row != -1){
            int ref_facture = Integer.valueOf(String.valueOf(tbl_facture.getValueAt(row, 0)));
            double ttc = Double.valueOf(String.valueOf(tbl_facture.getValueAt(row, 4)));
           // JOptionPane.showMessageDialog(null, ttc);
            String m = FrenchNumberToWords.convert(Double.valueOf(ttc).longValue());
            m = m.substring(0, 1).toUpperCase() + m.substring(1)+ "   Dh";
            Map<String, Object> param = new HashMap<>();
            param.put("NoFact", ref_facture);
            param.put("m", m);
           //getClass().getResource("/reports/facture_02.jrxml").getFile()
           // file =  file.replace('\\', '/');
           // JOptionPane.showMessageDialog(null , file);
            
           // JasperDesign jasperdesign = JRXmlLoader.load(file);
            //Compilation du rapport
           // JasperReport report = JasperCompileManager.compileReport(jasperdesign);
             String file = "/reports/facture_02.jasper";
                InputStream report = getClass().getResourceAsStream(file);
            //Remplissage du rapport
            JasperPrint print = JasperFillManager.fillReport(report, param, Connexion.getInstance());
            //Visualisation du rapport à l'ecran
            JasperViewer.viewReport(print , false);
            
            }else{
                JOptionPane.showMessageDialog(null, "Aucune facture n'est séléctionnée !!!");
            }
        } catch (JRException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btn_facturerActionPerformed

    private void btn_refrechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refrechActionPerformed
        // TODO add your handling code here:
        chargerFactures();
    }//GEN-LAST:event_btn_refrechActionPerformed

    private void btn_atteindreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atteindreActionPerformed
        // TODO add your handling code here:
           int code;
        String rep = JOptionPane.showInputDialog("Saisir le code facture à atteindre");
        Boolean existe = false;
        if (rep != null) {
            code = Integer.parseInt(rep);
            for (int i = 0; i < tbl_facture.getRowCount() && !existe; i++) {
                int ref_facture = Integer.valueOf(String.valueOf(tbl_facture.getValueAt(i, 0)));
                if (ref_facture == code) {
                    tbl_facture.changeSelection(i, 0, false, false);
                    existe = true;
                }
            }
            if (!existe) {
                JOptionPane.showMessageDialog(null, "Ce code facture n'existe pas !");
            }
        }
    }//GEN-LAST:event_btn_atteindreActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        int row = tbl_facture.getSelectedRow();
        if(row != -1){
            try {
                 int ref_facture = Integer.valueOf(String.valueOf(tbl_facture.getValueAt(row, 0)));
                state = Connexion.getInstance().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                String query = "delete from facture where id_facture="+ref_facture;
                state.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Facture supprimée !");
                ((DefaultTableModel) tbl_facture.getModel()).removeRow(row);
                state.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
                Logger.getLogger(pan_facture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
             JOptionPane.showMessageDialog(null, "Séléctionner la facture à supprimer!");
        }
    }//GEN-LAST:event_btn_deleteActionPerformed
    private void generateReports(String name, Map param) {
        try {

            //Chargement du rapport
            JasperDesign jasperdesign = JRXmlLoader.load("reports/test.jrxml");
            //Compilation du rapport
            JasperReport report = JasperCompileManager.compileReport(jasperdesign);
            //Remplissage du rapport
            JasperPrint print = JasperFillManager.fillReport(report, null, Connexion.getInstance());
            //Visualisation du rapport à l'ecran
            JasperViewer.viewReport(print);

        } catch (JRException ex) {
            Logger.getLogger(pan_facture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_atteindre;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_facturer;
    private javax.swing.JButton btn_refrech;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTable tbl_facture;
    private javax.swing.JToolBar toolBar_clients;
    private javax.swing.JTextField txt_code;
    // End of variables declaration//GEN-END:variables
}
